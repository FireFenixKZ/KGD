@page "/add"
@using KGD.Application.Contracts;
@using KGD.Application.DTO;
@using KGD.AuthProviders;
@using KGD.Data.DTO;
@using KGD.Services;
@inject IReportService reportService;
@inject IAuthService authService;
@inject AuthProvider authProvider;

<h3>Добавление нового отчета</h3>

<RadzenCard>
    <div class="row">
        <div class="col-md-6">
            <RadzenLabel Text="Отчет за период" />
            <input type="date" style="width:100%;" value="@report.ReportCreatedPeriod">
        </div>
        <div class="col-md-6">
            <RadzenLabel Text="Департамент" />
            <div class="form-group">
                <select style="width:100%;" for="Publisher" class="form-control"
                        @bind="@report.DepartmentId">
                    <option value=0 disabled selected hidden>
                        Выберите Департамент
                    </option>
                    @foreach (var publisher in DepartmentList)
                    {
                        <option value="@publisher.Id">
                            @publisher.Name
                        </option>
                    }
                </select>
            </div>
        </div>
    </div>    <br />
    <div class="row">
        <div class="col-md-6">
            <RadzenLabel Text="БИН/ИИН проверяемого НП" />
            <div class="form-group">
                <select style="width:100%;" for="Publisher" class="form-control"
                        @bind="@report.NPId">
                    <option value=0 disabled selected hidden>
                        Выберите БИН/ИИН
                    </option>
                    @foreach (var publisher in TaxPayers)
                    {
                        <option value="@publisher.Id">
                            @publisher.Bin - @publisher.Name
                        </option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <RadzenLabel Text="Период по искл. неблагонадежных НП  (год)" />
            <input type="date" style="width:45%;" value="@report.PeriodNPFrom">
            -
            <input type="date" style="width:45%;" value="@report.PeriodNPTo">
            <p style="color:red;">@dateError</p>
        </div>
    </div>    <br />
    <div class="row">
        <div class="col-md-6">
            <RadzenLabel Text="Номер предписания" />
            <RadzenTextBox Style="width:100%;" @bind-Value="@report.Regulation" />
        </div>
        <div class="col-md-6">
            <RadzenLabel Text="Дата вручения предписания" />
            <input type="date" style="width:100%;" value="@report.RegulationDate">
        </div>
    </div>    <br />
    <div class="row">
        <div class="col-md-6">
            <RadzenLabel Text="Наименование неблагонадежных НП, исключенных в ходе проверки" />
            <div class="form-group">
                <select style="width:100%;" for="Publisher" class="form-control"
                        @bind="@report.ExceptedNPId">
                    <option value=0 disabled selected hidden>
                        Выберите НП
                    </option>
                    @foreach (var publisher in TaxPayers)
                    {
                        <option value="@publisher.Id">
                            @publisher.Bin - @publisher.Name
                        </option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <RadzenLabel Text="Тип услуги" />
            <div class="form-group">
                <select style="width:100%;" for="Publisher" class="form-control"
                        @bind="@report.ServiceTypeId">
                    <option value=0 disabled selected hidden>
                        Выберите услугу
                    </option>
                    @foreach (var publisher in ServiceTypes)
                    {
                        <option value="@publisher.Id">
                            @publisher.Name
                        </option>
                    }
                </select>
            </div>
        </div>
    </div>    <br />
    <div class="row">
        @* <div class="col-md-6">
        <RadzenLabel Text="Код ДГД" />
        <RadzenTextBox Style="width:100%;" @bind-Value="@report.KGDCode" />
        </div>*@

        <div class="col-md-6">
            <RadzenLabel Text="Общая сумма" />
            <RadzenNumeric Style="width:100%;" @bind-Value="@report.TotalSum" />
        </div>
    </div>    <br />
    <div class="row">
        <div class="col-md-6">
            <RadzenLabel Text="Сумма оборота" />
            <RadzenNumeric Style="width:100%;" @bind-Value="@report.OborotSumm" />
        </div>
        <div class="col-md-6">
            <RadzenLabel Text="Сумма НДС" />
            <RadzenNumeric Style="width:100%;" @bind-Value="@report.TaxSumm" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6"></div>
        <div class="col-md-6" style="text-align:end;">
            <RadzenButton Text="Отменить" ButtonStyle="ButtonStyle.Secondary" Click="@(() => navigationManager.NavigateTo("/"))" />
            <RadzenButton Text="Очистить" Click="OnClear" />
            <RadzenButton Text="Добавить" ButtonStyle="ButtonStyle.Success" Click="OnSubmit" />
        </div>
    </div>
</RadzenCard>

@code {
    private ReportDTO report = new ReportDTO();
    private List<DepartmentDTO> DepartmentList = new List<DepartmentDTO>();
    private List<ServiceTypeDTO> ServiceTypes = new List<ServiceTypeDTO>();
    private List<TaxPayerDTO> TaxPayers = new List<TaxPayerDTO>();
    string dateError;
    private object? UserId = null;
    private object? DepartmentId = null;
    [Inject]
    private NavigationManager navigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var authstate = await authProvider.GetAuthenticationStateAsync();
        UserId = authstate.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
        DepartmentId = authstate.User.FindFirst(System.Security.Claims.ClaimTypes.Country).Value;
        DepartmentList = await reportService.GetDepartments();
        ServiceTypes = await reportService.GetServiceTypes();
        TaxPayers = await reportService.GetTaxPayers();
    }

    private async void OnSubmit()
    {
        if (report.PeriodNPFrom > report.PeriodNPTo)
        {
            dateError = "Period from must be lower than period to";
            return;
        }
        report.UserId = Convert.ToInt32(UserId);
        report.DepartmentId = Convert.ToInt32(DepartmentId);
        await reportService.AddReport(report);
        navigationManager.NavigateTo("/");
    }

    private void OnClear()
    {
        report = new ReportDTO();
    }
}
